{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/joesh/IdeaProjects/soundtracks_final/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/joesh/IdeaProjects/soundtracks_final/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Information to reach API\nvar API_URL_COMPLETIONS = \"https://api.openai.com/v1/completions\";\nvar API_URL_CHAT_COMPLETIONS = \"https://api.openai.com/v1/chat/completions\";\nvar api_key = process.env.REACT_APP_MY_OPENAI_API_KEY; //API key that Joe got from registering the app\nvar API_URL_IMAGE = \"https://api.openai.com/v1/images/generations\";\n\n//Asynchronous functions\nexport var generateSongRecommendations = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(prompt) {\n    var data, response, jsonResponse, responseArray, filteredResponse;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          data = JSON.stringify({\n            model: \"gpt-4\",\n            messages: [{\n              role: \"system\",\n              content: \"You are a music recommendation engine.\"\n            }, {\n              role: \"user\",\n              content: prompt\n            }]\n          });\n          _context.prev = 1;\n          _context.next = 4;\n          return fetch(API_URL_CHAT_COMPLETIONS, {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \".concat(api_key)\n            }\n          });\n        case 4:\n          response = _context.sent;\n          if (!response.ok) {\n            _context.next = 12;\n            break;\n          }\n          _context.next = 8;\n          return response.json();\n        case 8:\n          jsonResponse = _context.sent;\n          responseArray = jsonResponse.choices[0].message.content.split(/\\d+\\.\\s/g);\n          filteredResponse = responseArray.map(function (element) {\n            return element.replace(/\\n|\\d+\\./g, \"\").trim();\n          }).filter(function (element) {\n            return element !== \"\";\n          });\n          return _context.abrupt(\"return\", filteredResponse);\n        case 12:\n          _context.next = 17;\n          break;\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 14]]);\n  }));\n  return function generateSongRecommendations(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var generatePlaylistName = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(prompt) {\n    var data, response, jsonResponse, textResponse;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          data = JSON.stringify({\n            model: \"text-davinci-003\",\n            prompt: prompt,\n            temperature: 0.5,\n            max_tokens: 500,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n          });\n          _context2.prev = 1;\n          _context2.next = 4;\n          return fetch(API_URL_COMPLETIONS, {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \".concat(api_key)\n            }\n          });\n        case 4:\n          response = _context2.sent;\n          if (!response.ok) {\n            _context2.next = 11;\n            break;\n          }\n          _context2.next = 8;\n          return response.json();\n        case 8:\n          jsonResponse = _context2.sent;\n          textResponse = jsonResponse.choices[0].text;\n          return _context2.abrupt(\"return\", textResponse);\n        case 11:\n          _context2.next = 16;\n          break;\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 13]]);\n  }));\n  return function generatePlaylistName(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var generateImage = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(prompt) {\n    var data, response, jsonResponse;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          data = JSON.stringify({\n            \"model\": \"image-alpha-001\",\n            \"prompt\": prompt,\n            \"num_images\": 1,\n            \"size\": \"512x512\"\n          });\n          _context3.prev = 1;\n          _context3.next = 4;\n          return fetch(API_URL_IMAGE, {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \".concat(api_key)\n            }\n          });\n        case 4:\n          response = _context3.sent;\n          if (!response.ok) {\n            _context3.next = 17;\n            break;\n          }\n          _context3.next = 8;\n          return response.json();\n        case 8:\n          jsonResponse = _context3.sent;\n          if (!(jsonResponse && jsonResponse.data && jsonResponse.data.length > 0)) {\n            _context3.next = 13;\n            break;\n          }\n          return _context3.abrupt(\"return\", jsonResponse.data[0].url);\n        case 13:\n          console.error(\"Invalid response from OpenAI API\");\n          return _context3.abrupt(\"return\", null);\n        case 15:\n          _context3.next = 19;\n          break;\n        case 17:\n          console.error(\"Failed to generate image: \".concat(response.status));\n          return _context3.abrupt(\"return\", null);\n        case 19:\n          _context3.next = 25;\n          break;\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.error(\"Error generating image: \".concat(_context3.t0));\n          return _context3.abrupt(\"return\", null);\n        case 25:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 21]]);\n  }));\n  return function generateImage(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\ngenerateImage(\"Image of driving down the 101. Not containing text.\").then(function (albumArtUrl) {\n  console.log(albumArtUrl); // the URL of the generated album art\n  // you can now set the state of the album art URL to `albumArtUrl`\n}).catch(function (error) {\n  console.error(error);\n});\nexport default {\n  generateSongRecommendations: generateSongRecommendations,\n  generatePlaylistName: generatePlaylistName,\n  generateImage: generateImage\n};","map":{"version":3,"names":["API_URL_COMPLETIONS","API_URL_CHAT_COMPLETIONS","api_key","process","env","REACT_APP_MY_OPENAI_API_KEY","API_URL_IMAGE","generateSongRecommendations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","prompt","data","response","jsonResponse","responseArray","filteredResponse","wrap","_callee$","_context","prev","next","JSON","stringify","model","messages","role","content","fetch","method","body","headers","concat","sent","ok","json","choices","message","split","map","element","replace","trim","filter","abrupt","t0","console","log","stop","_x","apply","arguments","generatePlaylistName","_ref2","_callee2","textResponse","_callee2$","_context2","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","text","_x2","generateImage","_ref3","_callee3","_callee3$","_context3","length","url","error","status","_x3","then","albumArtUrl","catch"],"sources":["C:/Users/joesh/IdeaProjects/soundtracks_final/src/util/OpenAiAPIRequest.js"],"sourcesContent":["// Information to reach API\r\nconst API_URL_COMPLETIONS = \"https://api.openai.com/v1/completions\";\r\nconst API_URL_CHAT_COMPLETIONS = \"https://api.openai.com/v1/chat/completions\";\r\nconst api_key = process.env.REACT_APP_MY_OPENAI_API_KEY;//API key that Joe got from registering the app\r\nconst API_URL_IMAGE = \"https://api.openai.com/v1/images/generations\";\r\n\r\n//Asynchronous functions\r\nexport const generateSongRecommendations = async (prompt) => {\r\n    const data = JSON.stringify({\r\n        model: \"gpt-4\",\r\n        messages: [{\r\n            role: \"system\",\r\n            content: \"You are a music recommendation engine.\"\r\n        }, {\r\n            role: \"user\",\r\n            content: prompt\r\n        }],\r\n    });\r\n\r\n    try {\r\n        const response = await fetch(API_URL_CHAT_COMPLETIONS, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${api_key}`\r\n            }\r\n        });\r\n\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            const responseArray = jsonResponse.choices[0].message.content.split(/\\d+\\.\\s/g);\r\n            const filteredResponse = responseArray.map((element) => {\r\n                return element.replace(/\\n|\\d+\\./g, \"\").trim();\r\n            }).filter((element) => element !== \"\");\r\n            return (filteredResponse);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const generatePlaylistName = async(prompt) => {\r\n    const data = JSON.stringify({\r\n        model: \"text-davinci-003\",\r\n        prompt: prompt,\r\n        temperature: 0.5,\r\n        max_tokens: 500,\r\n        top_p: 1,\r\n        frequency_penalty: 0,\r\n        presence_penalty: 0\r\n    });\r\n\r\n    try {\r\n        const response = await fetch(API_URL_COMPLETIONS, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${api_key}`\r\n            }\r\n        });\r\n        if(response.ok){\r\n            const jsonResponse = await response.json();\r\n            const textResponse = jsonResponse.choices[0].text\r\n            return(textResponse);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const generateImage = async (prompt) => {\r\n    const data = JSON.stringify({\r\n        \"model\": \"image-alpha-001\",\r\n        \"prompt\": prompt,\r\n        \"num_images\": 1,\r\n        \"size\": \"512x512\",\r\n    });\r\n\r\n    try {\r\n        const response = await fetch(API_URL_IMAGE, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${api_key}`\r\n            }\r\n        });\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            if (jsonResponse && jsonResponse.data && jsonResponse.data.length > 0) {\r\n                return jsonResponse.data[0].url;\r\n            } else {\r\n                console.error(\"Invalid response from OpenAI API\");\r\n                return null;\r\n            }\r\n        } else {\r\n            console.error(`Failed to generate image: ${response.status}`);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error(`Error generating image: ${error}`);\r\n        return null;\r\n    }\r\n}\r\n\r\ngenerateImage(`Image of driving down the 101. Not containing text.`)\r\n    .then(albumArtUrl => {\r\n        console.log(albumArtUrl); // the URL of the generated album art\r\n        // you can now set the state of the album art URL to `albumArtUrl`\r\n    })\r\n    .catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n\r\n\r\nexport default {generateSongRecommendations, generatePlaylistName, generateImage};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}